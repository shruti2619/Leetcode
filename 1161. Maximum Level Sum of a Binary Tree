/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxLevelSum(TreeNode* root) {
        int level=1;
        int maxi= INT_MIN;
        int sum=0;
        int minlevel=1;
        queue <TreeNode*> q;
        q.push(root);
        q.push(NULL);
        
        while(!q.empty()){
            TreeNode* front= q.front();
            q.pop();
            
            if(front==NULL){
                if(sum> maxi)
                {
                    minlevel= level;
                    maxi= sum;
                }
                sum=0;
                level++;
                if(!q.empty()){
                    q.push(NULL);
                }
            }
            else{
                sum+=front->val;
                if(front->left) q.push(front->left);
                if(front->right) q.push(front->right);
            }
            
        }
        return minlevel;   
    }
};
