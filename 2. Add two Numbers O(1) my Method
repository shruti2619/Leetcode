/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    void insert(ListNode* &head,ListNode* &tail, int n){
        ListNode* node= new ListNode(n);
        if(head== NULL){
            head= node;
            tail= node;
            return;
        }
        tail->next= node;
        tail= node;
        
    }
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int carry=0;
        ListNode* head= NULL;
        ListNode* tail= NULL;

        while(l1!=NULL && l2!=NULL){
            int sum= carry+ l1->val+l2->val;
            carry= sum/10;
            insert(head, tail, sum%10);
            l1= l1->next;
            l2= l2->next;
        }
        while(l1!=NULL){
            int sum= carry+ l1->val;
            carry= sum/10;
            insert(head, tail, sum%10);
            l1= l1->next;
        }
        while(l2!=NULL){
            int sum= carry+ l2->val;
            carry= sum/10;
            insert(head, tail, sum%10);
            l2= l2->next;
        }
        if(carry!=0)
            insert(head, tail, carry);
        return head;
    }
};
